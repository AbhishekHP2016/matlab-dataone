% SessionTEST A class used to test the org.dataone.client.v2.Session class functionality
%
% This work was created by participants in the DataONE project, and is
% jointly copyrighted by participating institutions in DataONE. For
% more information on DataONE, see our web site at http://dataone.org.
%
%   Copyright 2009-2015 DataONE
%
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%
%   http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

classdef SessionTest < matlab.unittest.TestCase
    
    properties
    end

    methods (Test)
        
        function testInstantiate(testCase)
            % TESTINSTANTIATE tests instantiation of the object
            
            import org.dataone.client.v2.Session;
            import org.dataone.client.v2.Session;
            session = Session();
            
            testCase.assertInstanceOf(session, 'org.dataone.client.v2.Session');
            
        end
        
        function testTokenSession(testCase)
            % TESTTOKENSESSION tests a token-based sesssion
            
            import org.dataone.client.configure.Configuration;
            import org.dataone.client.v2.Session;
            config = Configuration.loadConfig('');
            
            % Use a known expired token
            set(config, 'authentication_token', ...
                ['eyJhbGciOiJSUzI1NiJ9.eyJjb25zdW1lcktle' ...
                'SI6InRoZWNvbnN1bWVya2V5IiwiaXNzdWVkQXQiO' ...
                'iIyMDE2LTAxLTAxVDE3OjMyOjAxLjc1MSswMDowM' ...
                'CIsInVzZXJJZCI6IkNOPUNocmlzdG9waGVyIEpvb' ...
                'mVzIEEzNjIxNixPPUdvb2dsZSxDPVVTLERDPWNpb' ...
                'G9nb24sREM9b3JnIiwiZnVsbE5hbWUiOm51bGwsI' ...
                'nR0bCI6NjQ4MDAwMDB9.FewoMtByHP68PP2ZKTKe' ...
                'nhpSOaZgq3R4SpMsvegcbrDDW-Z5r4BCdaKwjXr2' ...
                'oTLnxwgMEKnRZx3TVryCGYbPOoHikMqDMo5W1Els' ...
                'PMvBOwvCyVSfTIldFSyEYqxcPBGMsA4GHuDi_jvg' ...
                '8XOOxgX13DBbYa3lfMV0kjaeBJbQtEpfvgtF7vH0' ...
                'FZAcPOZEU5OGQtKip7_WehukT5Qoax6Ykm-i7jXv' ...
                'ZZBA9zIRWqifOBpyPcWNVpxEqdelq0gIB-gmdkVG' ...
                'cIMTp28oQo55_8neAxIxV4C_OPLrK0TV41ymDVxu' ...
                '4X7iBq6xuGLiYQhQlLr_kOg7ozMOsAb21m3_4iTK' ...
                'G9Vqn5ToMtgljDyJcgQn-wFwwc7U694h8D9BiYbB' ...
                '0X8ZWYyYD6CnDg07jNIm7XKdrzNqYUJ_kIlOrhCv' ...
                'fgybvVsZHGURkPbu6Ye3TtAbfk_4V6FdykwZz7eK' ...
                '7kqdY3P6BNAy1q6n4PhEcko5quZFYFUAfp0JI7yB' ...
                'iDPhayOc0wQp7Oost4cMjVUKI9wtfCENZWrzwTHF' ...
                'fYDibxvY-OoLJUV0AkJzRtowRjyATk7RV9uhhBMJ' ...
                'jzTEo3ygjQgjticKTZBJq3Bk70ZK1dL9niCGunah' ...
                'Ho9NQdqmUD4mlPUDeiNvSEEHYEqOZ0a_w20PQlXZ' ...
                'YtYZHCc0Dsj6XhYnpD-kbcU']);
            
            set(config, 'certificate_path', '');
            
            % Get a session
            session = Session();
            
            known_subject = 'CN=Christopher Jones A36216,O=Google,C=US,DC=cilogon,DC=org';
            known_expire_datenum = datenum( ...
                datetime('2016-01-02 11:32:01.750999999+0000', ...
                'TimeZone', 'UTC', ...
                'InputFormat', 'yyyy-MM-dd HH:mm:ss.SSSSSSSSSZ', ...
                'Format', 'yyyy-MM-dd HH:mm:ss.SSSSSSSSSZ'));
            actual_expire_datenum = datenum( ...
                datetime(session.expiration_date, ...
                'ConvertFrom', 'datetime', ...
                'TimeZone', 'UTC', ...
                'Format', 'yyyy-MM-dd HH:mm:ss.SSSSSSSSSZ'));
            known_type = 'authentication token';
            known_status = 'expired';
            
            format long;
            disp(datenum(known_expire_datenum));
            disp(datenum(actual_expire_datenum));
            
            assertEqual(testCase, known_subject, session.account_subject);
            assertEqual(testCase, known_expire_datenum, actual_expire_datenum);
            assertEqual(testCase, known_type, session.type);
            assertEqual(testCase, known_status, session.status);
        end
    end
    
end